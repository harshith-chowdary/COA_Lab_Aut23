$date
	Mon Aug 28 16:30:33 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_bench $end
$scope module test $end
$var wire 3 ! op [2:0] $end
$var wire 8 " r1 [7:0] $end
$var wire 8 # r2 [7:0] $end
$var wire 8 $ out7 [7:0] $end
$var wire 8 % out6 [7:0] $end
$var wire 8 & out5 [7:0] $end
$var wire 8 ' out4 [7:0] $end
$var wire 8 ( out3 [7:0] $end
$var wire 8 ) out2 [7:0] $end
$var wire 8 * out1 [7:0] $end
$var wire 8 + out0 [7:0] $end
$var reg 8 , out [7:0] $end
$scope module f0 $end
$var wire 1 - cin $end
$var wire 8 . r1 [7:0] $end
$var wire 8 / r2 [7:0] $end
$var wire 8 0 out [7:0] $end
$var wire 1 1 c2 $end
$var wire 1 2 c1 $end
$scope module cla1 $end
$var wire 4 3 a [3:0] $end
$var wire 4 4 b [3:0] $end
$var wire 1 - cin $end
$var wire 1 2 cout $end
$var wire 4 5 g [3:0] $end
$var wire 4 6 p [3:0] $end
$var wire 4 7 sum [3:0] $end
$var wire 4 8 c [3:0] $end
$upscope $end
$scope module cla2 $end
$var wire 4 9 a [3:0] $end
$var wire 4 : b [3:0] $end
$var wire 1 2 cin $end
$var wire 1 1 cout $end
$var wire 4 ; g [3:0] $end
$var wire 4 < p [3:0] $end
$var wire 4 = sum [3:0] $end
$var wire 4 > c [3:0] $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 8 ? one [7:0] $end
$var wire 8 @ r1 [7:0] $end
$var wire 8 A r2 [7:0] $end
$var wire 8 B t2 [7:0] $end
$var wire 8 C t1 [7:0] $end
$var wire 8 D out [7:0] $end
$scope module addfinal $end
$var wire 1 E cin $end
$var wire 8 F r1 [7:0] $end
$var wire 8 G r2 [7:0] $end
$var wire 8 H out [7:0] $end
$var wire 1 I c2 $end
$var wire 1 J c1 $end
$scope module cla1 $end
$var wire 4 K a [3:0] $end
$var wire 4 L b [3:0] $end
$var wire 1 E cin $end
$var wire 1 J cout $end
$var wire 4 M g [3:0] $end
$var wire 4 N p [3:0] $end
$var wire 4 O sum [3:0] $end
$var wire 4 P c [3:0] $end
$upscope $end
$scope module cla2 $end
$var wire 4 Q a [3:0] $end
$var wire 4 R b [3:0] $end
$var wire 1 J cin $end
$var wire 1 I cout $end
$var wire 4 S g [3:0] $end
$var wire 4 T p [3:0] $end
$var wire 4 U sum [3:0] $end
$var wire 4 V c [3:0] $end
$upscope $end
$upscope $end
$scope module addpls $end
$var wire 1 W cin $end
$var wire 8 X r2 [7:0] $end
$var wire 8 Y r1 [7:0] $end
$var wire 8 Z out [7:0] $end
$var wire 1 [ c2 $end
$var wire 1 \ c1 $end
$scope module cla1 $end
$var wire 4 ] a [3:0] $end
$var wire 4 ^ b [3:0] $end
$var wire 1 W cin $end
$var wire 1 \ cout $end
$var wire 4 _ g [3:0] $end
$var wire 4 ` p [3:0] $end
$var wire 4 a sum [3:0] $end
$var wire 4 b c [3:0] $end
$upscope $end
$scope module cla2 $end
$var wire 4 c a [3:0] $end
$var wire 4 d b [3:0] $end
$var wire 1 \ cin $end
$var wire 1 [ cout $end
$var wire 4 e g [3:0] $end
$var wire 4 f p [3:0] $end
$var wire 4 g sum [3:0] $end
$var wire 4 h c [3:0] $end
$upscope $end
$upscope $end
$scope module donot $end
$var wire 8 i r1 [7:0] $end
$var wire 8 j out [7:0] $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 8 k out [7:0] $end
$var wire 8 l r1 [7:0] $end
$upscope $end
$scope module f3 $end
$var wire 8 m r1 [7:0] $end
$var wire 8 n out [7:0] $end
$upscope $end
$scope module f4 $end
$var wire 8 o r1 [7:0] $end
$var wire 8 p out [7:0] $end
$upscope $end
$scope module f5 $end
$var wire 8 q r1 [7:0] $end
$var wire 8 r r2 [7:0] $end
$var wire 8 s out [7:0] $end
$upscope $end
$scope module f6 $end
$var wire 8 t r1 [7:0] $end
$var wire 8 u out [7:0] $end
$upscope $end
$scope module f7 $end
$var wire 8 v r1 [7:0] $end
$var wire 8 w r2 [7:0] $end
$var wire 8 x out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10101 x
b10100 w
b101 v
b11111010 u
b101 t
b100 s
b10100 r
b101 q
b10 p
b101 o
b1010 n
b101 m
b101 l
b101 k
b11101011 j
b10100 i
b0 h
b1110 g
b1110 f
b0 e
b0 d
b1110 c
b110 b
b1100 a
b1010 `
b1 _
b1 ^
b1011 ]
0\
0[
b11101100 Z
b11101011 Y
b1 X
0W
b1 V
b1111 U
b1110 T
b0 S
b1110 R
b0 Q
b1000 P
b1 O
b1001 N
b100 M
b1100 L
b101 K
1J
0I
b11110001 H
b11101100 G
b101 F
0E
b11110001 D
b11101011 C
b11101100 B
b10100 A
b101 @
b1 ?
b0 >
b1 =
b1 <
b0 ;
b1 :
b0 9
b1000 8
b1001 7
b1 6
b100 5
b100 4
b101 3
02
01
b11001 0
b10100 /
b101 .
0-
b11001 ,
b11001 +
b11110001 *
b101 )
b1010 (
b10 '
b100 &
b11111010 %
b10101 $
b10100 #
b101 "
b0 !
$end
#5
1I
b0 8
b0 P
b1101 V
b1110 7
b10111110 +
b10111110 0
b1011 =
b110 O
b10010110 *
b10010110 D
b10010110 H
b1001 U
b1110 6
b0 5
b1011 <
b110 N
b1000 M
b100 T
b1010 S
b0 &
b0 s
b1010101 %
b1010101 u
b10111110 $
b10111110 x
b1010 3
b1010 9
b1010 K
b1010 Q
b1010101 ,
b1010100 (
b1010100 n
b1010101 '
b1010101 p
b110 !
b10101010 )
b10101010 k
b10101010 "
b10101010 .
b10101010 @
b10101010 F
b10101010 l
b10101010 m
b10101010 o
b10101010 q
b10101010 t
b10101010 v
#10
b1100 V
0J
b1011 L
b0 b
b1011 R
b1000 >
b1011 a
b10111011 B
b10111011 G
b10111011 Z
b1011 g
b1011 `
b0 _
b1011 f
b1010 ]
b1011 c
b101 7
b10100101 +
b10100101 0
b1010 =
b1011 O
b11011 *
b11011 D
b11011 H
b1 U
b10111010 C
b10111010 Y
b10111010 j
b101 6
b10 <
b100 ;
b1011 N
b0 M
b1101 T
b10 S
b1000000 &
b1000000 s
b10011111 %
b10011111 u
b1100101 $
b1100101 x
b101 4
b100 :
b0 3
b110 9
b0 K
b110 Q
b11011 ,
b11000000 (
b11000000 n
b110000 '
b110000 p
b1 !
b1000101 #
b1000101 /
b1000101 A
b1000101 i
b1000101 r
b1000101 w
b1100000 )
b1100000 k
b1100000 "
b1100000 .
b1100000 @
b1100000 F
b1100000 l
b1100000 m
b1100000 o
b1100000 q
b1100000 t
b1100000 v
#15
0I
b100 V
b0 >
b10 8
b110 P
b110 7
b1100110 +
b1100110 0
b110 =
b1100 O
b11011100 *
b11011100 D
b11011100 H
b1101 U
b100 6
b1 5
b110 <
b0 ;
b1010 N
b1 M
b1001 T
b1 &
b1 s
b11011110 %
b11011110 u
b1 3
b10 9
b1 K
b10 Q
b100001 ,
b1000010 (
b1000010 n
b10000 '
b10000 p
b10 !
b100001 )
b100001 k
b100001 "
b100001 .
b100001 @
b100001 F
b100001 l
b100001 m
b100001 o
b100001 q
b100001 t
b100001 v
#20
12
11
b1110 P
1J
1I
b1110 8
b1111 >
b1111 V
b100 7
b1000100 +
b1000100 0
b100 =
b1010 O
b10111010 *
b10111010 D
b10111010 H
b1011 U
b1010 6
b101 5
b1011 <
b100 ;
b100 N
b1011 M
b100 T
b1011 S
b1000101 &
b1000101 s
b0 %
b0 u
b11111111 $
b11111111 x
b1111 3
b1111 9
b1111 K
b1111 Q
b11111110 ,
b11111110 (
b11111110 n
b1111111 '
b1111111 p
b11 !
b11111111 )
b11111111 k
b11111111 "
b11111111 .
b11111111 @
b11111111 F
b11111111 l
b11111111 m
b11111111 o
b11111111 q
b11111111 t
b11111111 v
#25
b1111111 ,
b100 !
#30
02
01
1I
b1001 L
b1111 R
b1001 a
b11111001 B
b11111001 G
b11111001 Z
b1111 g
b0 >
b1001 `
b1111 f
b0 8
b0 P
b1111 V
b1000 ]
b1111 c
b1111 7
b1111 +
b1111 0
b0 =
b1 O
b1 *
b1 D
b1 H
b0 U
b11111000 C
b11111000 Y
b11111000 j
b1111 6
b0 5
b0 <
b0 ;
b1 N
b1000 M
b1111 T
b0 S
b0 &
b0 s
b11110111 %
b11110111 u
b1111 $
b1111 x
b111 4
b0 :
b1000 3
b0 9
b1000 K
b0 Q
b0 ,
b10000 (
b10000 n
b100 '
b100 p
b101 !
b111 #
b111 /
b111 A
b111 i
b111 r
b111 w
b1000 )
b1000 k
b1000 "
b1000 .
b1000 @
b1000 F
b1000 l
b1000 m
b1000 o
b1000 q
b1000 t
b1000 v
#35
b1111 ,
b111 !
#135
